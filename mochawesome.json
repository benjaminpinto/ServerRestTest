{
  "stats": {
    "suites": 7,
    "tests": 45,
    "passes": 44,
    "pending": 1,
    "failures": 0,
    "start": "2022-06-13T01:56:04.635Z",
    "end": "2022-06-13T01:58:05.623Z",
    "duration": 73976,
    "testsRegistered": 45,
    "passPercent": 97.77777777777777,
    "pendingPercent": 2.2222222222222223,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "39f6ed13-8c72-47a9-89d8-bdee19c2c475",
      "title": "",
      "fullFile": "cypress\\e2e\\api_tests\\user.cy.js",
      "file": "cypress\\e2e\\api_tests\\user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f402f212-36c3-4d2a-a07f-41da04f3e5a9",
          "title": "API Users tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "04775c43-3395-4c40-bdbf-5da1eff1504b",
              "title": "Get list and Search users",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get user's list, then search for the first using his ID",
                  "fullTitle": "API Users tests Get list and Search users Get user's list, then search for the first using his ID",
                  "timedOut": null,
                  "duration": 512,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getUsersList().then(list => {\n  expect(list.status).to.equal(200);\n  expect(list.body).be.not.empty;\n  cy.searchUser(list.body.usuarios[0]._id).then(user => {\n    expect(user.status).to.equal(200);\n    expect(user.body.nome).to.equal(list.body.usuarios[0].nome);\n    expect(user.body.email).to.equal(list.body.usuarios[0].email);\n    expect(user.body.password).to.equal(list.body.usuarios[0].password);\n  });\n});",
                  "err": {},
                  "uuid": "d418a3ef-c067-4ee8-9da0-b46949b589fc",
                  "parentUUID": "04775c43-3395-4c40-bdbf-5da1eff1504b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d418a3ef-c067-4ee8-9da0-b46949b589fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 512,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7243f689-d40b-4446-8138-31aa09a1c2e7",
              "title": "Creating an user",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check creating an user for the 1st time",
                  "fullTitle": "API Users tests Creating an user Check creating an user for the 1st time",
                  "timedOut": null,
                  "duration": 300,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(user).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
                  "err": {},
                  "uuid": "7871078d-8ae8-44b1-8bd3-1ef4c30bbbe3",
                  "parentUUID": "7243f689-d40b-4446-8138-31aa09a1c2e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Attempting to create the same user",
                  "fullTitle": "API Users tests Creating an user Attempting to create the same user",
                  "timedOut": null,
                  "duration": 256,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(user).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Este email já está sendo usado');\n  cy.log(user);\n});",
                  "err": {},
                  "uuid": "d1e7b54f-4f6b-4574-b9a2-bd09564a13fd",
                  "parentUUID": "7243f689-d40b-4446-8138-31aa09a1c2e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7871078d-8ae8-44b1-8bd3-1ef4c30bbbe3",
                "d1e7b54f-4f6b-4574-b9a2-bd09564a13fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 556,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "20596f01-963c-4ccf-9df1-f9015021588a",
              "title": "Deleting an user",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Getting users list then, deleting the first",
                  "fullTitle": "API Users tests Deleting an user Getting users list then, deleting the first",
                  "timedOut": null,
                  "duration": 465,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getUsersList().then(users => {\n  expect(users.status).to.equal(200);\n  expect(users.body).be.not.empty;\n  cy.deleteUser(users.body.usuarios[0]._id).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
                  "err": {},
                  "uuid": "08a68a20-676c-4fc9-8c4f-4278442e91b5",
                  "parentUUID": "20596f01-963c-4ccf-9df1-f9015021588a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Attempting to delete not found user",
                  "fullTitle": "API Users tests Deleting an user Attempting to delete not found user",
                  "timedOut": null,
                  "duration": 281,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.deleteUser('0000').then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Nenhum registro excluído');\n});",
                  "err": {},
                  "uuid": "064c0ee2-1b81-42d7-a441-4df01c5a88c0",
                  "parentUUID": "20596f01-963c-4ccf-9df1-f9015021588a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Attempt to delete an user with shopping cart [TO-DO]",
                  "fullTitle": "API Users tests Deleting an user Attempt to delete an user with shopping cart [TO-DO]",
                  "timedOut": null,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// TODO - Implementar teste",
                  "err": {},
                  "uuid": "498bcc67-0d33-4185-b4c0-4e87b7ebc906",
                  "parentUUID": "20596f01-963c-4ccf-9df1-f9015021588a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08a68a20-676c-4fc9-8c4f-4278442e91b5",
                "064c0ee2-1b81-42d7-a441-4df01c5a88c0",
                "498bcc67-0d33-4185-b4c0-4e87b7ebc906"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 781,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8ddf955f-9600-47ff-a718-ac407e27ef0b",
              "title": "Editing an user",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit a valid user",
                  "fullTitle": "API Users tests Editing an user Edit a valid user",
                  "timedOut": null,
                  "duration": 655,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getUsersList().then(users => {\n  expect(users.status).to.equal(200);\n  expect(users.body).be.not.empty;\n  cy.editUser(users.body.usuarios[0]._id, editedUser).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n  cy.searchUser(users.body.usuarios[0]._id).then(({\n    body\n  }) => {\n    expect(body.nome).to.equal(editedUser.nome);\n    expect(body.email).to.equal(editedUser.email);\n    expect(body.password).to.equal(editedUser.password);\n    expect(body.administrador).to.equal(editedUser.administrador);\n  });\n});",
                  "err": {},
                  "uuid": "ddf40e2a-1fc4-4072-b229-021640d4467d",
                  "parentUUID": "8ddf955f-9600-47ff-a718-ac407e27ef0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Edit with an unknown ID but same data (should fail)",
                  "fullTitle": "API Users tests Editing an user Edit with an unknown ID but same data (should fail)",
                  "timedOut": null,
                  "duration": 229,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.editUser('0000', editedUser).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Este email já está sendo usado');\n});",
                  "err": {},
                  "uuid": "3048d42d-a1bc-47ef-83f7-4ea1242392b8",
                  "parentUUID": "8ddf955f-9600-47ff-a718-ac407e27ef0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Edit with an unknown ID and different data (should create a new user)",
                  "fullTitle": "API Users tests Editing an user Edit with an unknown ID and different data (should create a new user)",
                  "timedOut": null,
                  "duration": 441,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newUser = {\n  nome: faker.name.findName(),\n  email: faker.internet.email(),\n  password: faker.internet.password(),\n  administrador: 'true'\n};\ncy.editUser('0000', newUser).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  cy.searchUser(response.body._id).then(({\n    body\n  }) => {\n    expect(body.nome).to.equal(newUser.nome);\n    expect(body.email).to.equal(newUser.email);\n    expect(body.password).to.equal(newUser.password);\n    expect(body.administrador).to.equal(newUser.administrador);\n  });\n});",
                  "err": {},
                  "uuid": "fe7cd132-8751-4ebd-b385-f7134dddb303",
                  "parentUUID": "8ddf955f-9600-47ff-a718-ac407e27ef0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ddf40e2a-1fc4-4072-b229-021640d4467d",
                "3048d42d-a1bc-47ef-83f7-4ea1242392b8",
                "fe7cd132-8751-4ebd-b385-f7134dddb303"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1325,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6cb4bce6-5d1c-4078-9a1f-95d5144f771a",
      "title": "",
      "fullFile": "cypress\\e2e\\gui_tests\\admin.cy.js",
      "file": "cypress\\e2e\\gui_tests\\admin.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "637fe427-99be-451d-9515-b6a95f796708",
          "title": "Tests from Admins home",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visibility of main elements",
              "fullTitle": "Tests from Admins home Visibility of main elements",
              "timedOut": null,
              "duration": 7038,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1').should('contain.text', `Bem Vindo  ${admin.name}`);\ncy.get('[data-testid=\"cadastrarUsuarios\"]').should('be.visible');\ncy.get('[data-testid=\"listarUsuarios\"]').should('be.visible');\ncy.get('[data-testid=\"cadastrarProdutos\"]').should('be.visible');\ncy.get('[data-testid=\"listarProdutos\"]').should('be.visible');\ncy.get('[data-testid=\"relatorios\"]').should('be.visible');",
              "err": {},
              "uuid": "85b44b1f-3f26-4292-941a-71b15bc4f88f",
              "parentUUID": "637fe427-99be-451d-9515-b6a95f796708",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85b44b1f-3f26-4292-941a-71b15bc4f88f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7038,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fbd3f07-8451-4d07-9924-57871153b6d5",
      "title": "",
      "fullFile": "cypress\\e2e\\gui_tests\\login.cy.js",
      "file": "cypress\\e2e\\gui_tests\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bdbff65-e8a7-492e-8779-734652bf347d",
          "title": "E2E GUI login tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify invalid e-mail message",
              "fullTitle": "E2E GUI login tests Verify invalid e-mail message",
              "timedOut": null,
              "duration": 2571,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.gui_login('invalid-email.com', 'any-pass');\ncy.get('#email.form-control').invoke('prop', 'validity').should('deep.include', {\n  valid: false\n});",
              "err": {},
              "uuid": "703fadf1-01c1-4cb1-8604-a706c7229fbf",
              "parentUUID": "2bdbff65-e8a7-492e-8779-734652bf347d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9ae82f6c-7002-4b1e-a351-9e8a4ee92175",
              "title": "Visibility and state of elements",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check initial state of page's elements",
                  "fullTitle": "E2E GUI login tests Visibility and state of elements Check initial state of page's elements",
                  "timedOut": null,
                  "duration": 813,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.form').should('be.visible').and('contain.text', 'Login');\ncy.get('.imagem').should('be.visible');\ncy.get('[data-testid=\"email\"]').should('be.visible').and('be.empty');\ncy.get('[data-testid=\"senha\"]').should('be.visible').and('be.empty');\ncy.get('[data-testid=\"entrar\"]').should('be.visible').and('be.enabled');\ncy.get('.message').should('contain.text', 'Não é cadastrado?').children().should('have.attr', 'data-testid', 'cadastrar');",
                  "err": {},
                  "uuid": "f863a596-8ed6-4b7b-a401-fd54c9aa6637",
                  "parentUUID": "9ae82f6c-7002-4b1e-a351-9e8a4ee92175",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f863a596-8ed6-4b7b-a401-fd54c9aa6637"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 813,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "163184bd-8836-4d67-b688-201e31037d12",
              "title": "Do login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "with empty credentials",
                  "fullTitle": "E2E GUI login tests Do login with empty credentials",
                  "timedOut": null,
                  "duration": 1255,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('[data-testid=\"entrar\"]').click();\ncy.contains('Email é obrigatório');\ncy.contains('Password é obrigatório');",
                  "err": {},
                  "uuid": "e9c5f693-e56d-4e69-8ea4-20c363f5950e",
                  "parentUUID": "163184bd-8836-4d67-b688-201e31037d12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "with wrong credentials",
                  "fullTitle": "E2E GUI login tests Do login with wrong credentials",
                  "timedOut": null,
                  "duration": 1672,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.gui_login('wrong@email.com', 'wrong-password');\ncy.contains('Email e/ou senha inválidos');",
                  "err": {},
                  "uuid": "80d5877e-00c7-4452-b790-84118fa4c164",
                  "parentUUID": "163184bd-8836-4d67-b688-201e31037d12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "with right user credentials",
                  "fullTitle": "E2E GUI login tests Do login with right user credentials",
                  "timedOut": null,
                  "duration": 2121,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(user);\ncy.gui_login(user.email, user.password);\ncy.get('h1').should('contain.text', 'Serverest Store');",
                  "err": {},
                  "uuid": "1891eb4d-6e6e-4b94-9c11-ac976e22eec3",
                  "parentUUID": "163184bd-8836-4d67-b688-201e31037d12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "with right admin credentials",
                  "fullTitle": "E2E GUI login tests Do login with right admin credentials",
                  "timedOut": null,
                  "duration": 2716,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(admin);\ncy.gui_login(admin.email, admin.password);\ncy.get('h1').should('contain.text', 'Bem Vindo');",
                  "err": {},
                  "uuid": "f13a45fb-c1bd-4fc5-b2d9-7238ccfa8412",
                  "parentUUID": "163184bd-8836-4d67-b688-201e31037d12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9c5f693-e56d-4e69-8ea4-20c363f5950e",
                "80d5877e-00c7-4452-b790-84118fa4c164",
                "1891eb4d-6e6e-4b94-9c11-ac976e22eec3",
                "f13a45fb-c1bd-4fc5-b2d9-7238ccfa8412"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7764,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "703fadf1-01c1-4cb1-8604-a706c7229fbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2571,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b372f49b-b404-459a-8c76-c085ca198f48",
      "title": "",
      "fullFile": "cypress\\e2e\\gui_tests\\products.cy.js",
      "file": "cypress\\e2e\\gui_tests\\products.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3abcd505-4b0f-47ec-912e-18eecbfe99ab",
          "title": "Tests from products page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check page elements",
              "fullTitle": "Tests from products page Check page elements",
              "timedOut": null,
              "duration": 6851,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Cadastro de Produtos').should('be.visible');\ncy.get(nameField).should('be.visible').and('be.empty');\ncy.get(priceField).should('be.visible').and('be.empty');\ncy.get(descriptionField).should('be.visible').and('be.empty');\ncy.get(quantityField).should('be.visible').and('be.empty');\ncy.get(btnCadastrar).should('be.visible').and('be.enabled');",
              "err": {},
              "uuid": "0f106b41-4ea2-4776-9d60-54fef31674b7",
              "parentUUID": "3abcd505-4b0f-47ec-912e-18eecbfe99ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tries to insert product with blank fields",
              "fullTitle": "Tests from products page Tries to insert product with blank fields",
              "timedOut": null,
              "duration": 1630,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(btnCadastrar).click();\ncy.contains('Nome é obrigatório').should('be.visible');\ncy.contains('Preco é obrigatório').should('be.visible');\ncy.contains('Descricao é obrigatório').should('be.visible');\ncy.contains('Quantidade é obrigatório').should('be.visible');",
              "err": {},
              "uuid": "4a785aba-180e-49b9-af4a-9ac862ed8c55",
              "parentUUID": "3abcd505-4b0f-47ec-912e-18eecbfe99ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tries to insert a product without image - Not passing (issue opened)",
              "fullTitle": "Tests from products page Tries to insert a product without image - Not passing (issue opened)",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4e4d6c14-0d9c-40aa-9ee8-4255e9ca3188",
              "parentUUID": "3abcd505-4b0f-47ec-912e-18eecbfe99ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f106b41-4ea2-4776-9d60-54fef31674b7",
            "4a785aba-180e-49b9-af4a-9ac862ed8c55"
          ],
          "failures": [],
          "pending": [
            "4e4d6c14-0d9c-40aa-9ee8-4255e9ca3188"
          ],
          "skipped": [],
          "duration": 8481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c7446a7-2fc1-4646-b18c-87afa61e2a9f",
      "title": "",
      "fullFile": "cypress\\e2e\\gui_tests\\signUp.cy.js",
      "file": "cypress\\e2e\\gui_tests\\signUp.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "795d7a78-ea4d-4e99-ae26-723a0e945e5c",
          "title": "E2E GUI SignUp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check page's elements visibility, state and expected behaviors",
              "fullTitle": "E2E GUI SignUp Check page's elements visibility, state and expected behaviors",
              "timedOut": null,
              "duration": 1606,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#nome').should('be.visible').and('be.empty');\ncy.get('#email').should('be.visible').and('be.empty');\ncy.get('#password').should('be.visible').and('be.empty');\ncy.get('#administrador').should('be.visible').and('be.not.checked');\ncy.get('[data-testid=\"cadastrar\"]').should('be.visible').and('be.enabled');\ncy.contains('Já é cadastrado?').should('be.visible');\ncy.get('[data-testid=\"entrar\"]').should('be.visible');",
              "err": {},
              "uuid": "9532055d-24a0-4c1c-a7a7-f16b82f7025d",
              "parentUUID": "795d7a78-ea4d-4e99-ae26-723a0e945e5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check error messages when let blank fields",
              "fullTitle": "E2E GUI SignUp Check error messages when let blank fields",
              "timedOut": null,
              "duration": 1269,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"cadastrar\"]').click();\ncy.contains('Nome é obrigatório').should('be.visible');\ncy.contains('Email é obrigatório').should('be.visible');\ncy.contains('Password é obrigatório').should('be.visible');",
              "err": {},
              "uuid": "3410f24a-977a-42b1-883f-a8015fe7b86c",
              "parentUUID": "795d7a78-ea4d-4e99-ae26-723a0e945e5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check error messages when let invalid e-mail",
              "fullTitle": "E2E GUI SignUp Check error messages when let invalid e-mail",
              "timedOut": null,
              "duration": 1310,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email').clear().type('invalid-email.com');\ncy.get('[data-testid=\"cadastrar\"]').click();\ncy.get('#email.form-control').invoke('prop', 'validity').should('deep.include', {\n  valid: false\n});",
              "err": {},
              "uuid": "103eb12c-86d7-40df-95c6-1a0268e88504",
              "parentUUID": "795d7a78-ea4d-4e99-ae26-723a0e945e5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup",
              "fullTitle": "E2E GUI SignUp Signup",
              "timedOut": null,
              "duration": 9087,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userName = faker.internet.userName();\nconst userEmail = faker.internet.email();\nconst userPassword = faker.internet.password();\ncy.intercept('POST', '**/login').as('login'); // Signup for the first time\ncy.gui_signUp(userName, userEmail, userPassword);\ncy.contains('Cadastro realizado com sucesso').should('be.visible');\ncy.wait('@login');\ncy.get('h1').should('contain.text', 'Serverest Store'); // Logout and try to signup with the same credentials\ncy.get('[data-testid=\"logout\"]').should('be.visible').click();\ncy.visit('https://front.serverest.dev/cadastrarusuarios');\ncy.gui_signUp(userName, userEmail, userPassword);\ncy.contains('Este email já está sendo usado').should('be.visible');",
              "err": {},
              "uuid": "75630e8c-9172-48e5-8e32-9f1e5d0c2b9c",
              "parentUUID": "795d7a78-ea4d-4e99-ae26-723a0e945e5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9532055d-24a0-4c1c-a7a7-f16b82f7025d",
            "3410f24a-977a-42b1-883f-a8015fe7b86c",
            "103eb12c-86d7-40df-95c6-1a0268e88504",
            "75630e8c-9172-48e5-8e32-9f1e5d0c2b9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "253b92f4-300f-409e-8ce8-25f571f5abb8",
      "title": "",
      "fullFile": "cypress\\e2e\\gui_tests\\users.cy.js",
      "file": "cypress\\e2e\\gui_tests\\users.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "892feb06-13f9-427b-8491-7d4c9796cc00",
          "title": "Tests from users page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
              "title": "Create user",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check page elements",
                  "fullTitle": "Tests from users page Create user Check page elements",
                  "timedOut": null,
                  "duration": 6537,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(nomeField).should('be.visible').and('have.attr', 'placeholder', 'Digite seu nome').and('be.empty');\ncy.get(emailField).should('be.visible').and('have.attr', 'placeholder', 'Digite seu email').and('be.empty');\ncy.get(passwordField).should('be.visible').and('have.attr', 'placeholder', 'Digite sua senha').and('be.empty');\ncy.get('.form-check').should('be.visible').children('[data-testid=\"checkbox\"]').should('not.be.checked');\ncy.get(btnCadastrar).should('be.visible').and('have.text', 'Cadastrar');",
                  "err": {},
                  "uuid": "eccef334-313f-447c-beb6-9a145c5da6d1",
                  "parentUUID": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tries to insert user with blank fields",
                  "fullTitle": "Tests from users page Create user Tries to insert user with blank fields",
                  "timedOut": null,
                  "duration": 1459,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(btnCadastrar).click();\ncy.contains('Nome é obrigatório').should('be.visible');\ncy.contains('Email é obrigatório').should('be.visible');\ncy.contains('Password é obrigatório').should('be.visible');",
                  "err": {},
                  "uuid": "1c7a4bc2-4953-48d3-925d-5dad921e6f46",
                  "parentUUID": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check email validation",
                  "fullTitle": "Tests from users page Create user Check email validation",
                  "timedOut": null,
                  "duration": 1473,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(emailField).type('any_invalid@email_com;');\ncy.get(btnCadastrar).click();\ncy.get(emailField).invoke('prop', 'validity').should('deep.include', {\n  valid: false\n});",
                  "err": {},
                  "uuid": "059393af-49c2-4540-a652-557f207d7dd3",
                  "parentUUID": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Include a valid user",
                  "fullTitle": "Tests from users page Create user Include a valid user",
                  "timedOut": null,
                  "duration": 2909,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('GET', '**/usuarios').as('getUsers');\n_Users.onUsersPage.fillForm(user);\ncy.get(btnCadastrar).click();\ncy.wait('@getUsers');\ncy.contains(user.name).should('be.visible').siblings(':nth-child(4)').should('contain.text', 'false');",
                  "err": {},
                  "uuid": "9f688216-443c-4377-a5f2-4d779e8fd691",
                  "parentUUID": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Include a valid admin",
                  "fullTitle": "Tests from users page Create user Include a valid admin",
                  "timedOut": null,
                  "duration": 2669,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const admin = {\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  password: faker.internet.password()\n};\ncy.intercept('GET', '**/usuarios').as('getUsers');\n_Users.onUsersPage.fillForm(admin);\ncy.get('[data-testid=\"checkbox\"]').check();\ncy.get(btnCadastrar).click();\ncy.wait('@getUsers');\ncy.contains(admin.name).should('be.visible').siblings(':nth-child(4)').should('contain.text', 'true');",
                  "err": {},
                  "uuid": "2329c01a-156a-4da1-a1cb-454e7da89bcd",
                  "parentUUID": "4481334f-6b97-48ac-aa28-7e83599ed3c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eccef334-313f-447c-beb6-9a145c5da6d1",
                "1c7a4bc2-4953-48d3-925d-5dad921e6f46",
                "059393af-49c2-4540-a652-557f207d7dd3",
                "9f688216-443c-4377-a5f2-4d779e8fd691",
                "2329c01a-156a-4da1-a1cb-454e7da89bcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15047,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "48c3006a-0fd0-4b4f-9219-df69ac798692",
              "title": "List, edit and delete users",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check main elements at list page",
                  "fullTitle": "Tests from users page List, edit and delete users Check main elements at list page",
                  "timedOut": null,
                  "duration": 1886,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.contains('Lista dos usuários').should('be.visible');\ncy.get('table').should('be.visible');\ncy.get('[data-testid=\"logout\"]').should('be.visible');",
                  "err": {},
                  "uuid": "b160a01e-8b82-48fd-9dc1-0764c690b8d7",
                  "parentUUID": "48c3006a-0fd0-4b4f-9219-df69ac798692",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Edit user",
                  "fullTitle": "Tests from users page List, edit and delete users Edit user",
                  "timedOut": null,
                  "duration": 2452,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('tbody tr td').last().find('.btn-info').click();\ncy.log(\"Edit functionality ins't implemented on frontend.\");",
                  "err": {},
                  "uuid": "091c744b-b51f-46e7-b1c3-949d479aff96",
                  "parentUUID": "48c3006a-0fd0-4b4f-9219-df69ac798692",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete user",
                  "fullTitle": "Tests from users page List, edit and delete users Delete user",
                  "timedOut": null,
                  "duration": 2968,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('DELETE', '**/usuarios/*').as('deleteUser');\nlet linesBeforeDel = 0;\ncy.get('tbody').children().then(lines => {\n  linesBeforeDel = lines.length;\n  cy.wrap(lines[0]).find('.btn-danger').click();\n});\ncy.wait('@deleteUser');\ncy.get('tbody').children().then(lines => {\n  expect(lines.length).to.be.equal(linesBeforeDel - 1);\n});",
                  "err": {},
                  "uuid": "115d90c9-201f-4f05-8133-532bca2064a7",
                  "parentUUID": "48c3006a-0fd0-4b4f-9219-df69ac798692",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b160a01e-8b82-48fd-9dc1-0764c690b8d7",
                "091c744b-b51f-46e7-b1c3-949d479aff96",
                "115d90c9-201f-4f05-8133-532bca2064a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "476ab308-c05f-4af0-bfdb-68b38b733010",
      "title": "",
      "fullFile": "cypress\\e2e\\api_tests\\product.cy.js",
      "file": "cypress\\e2e\\api_tests\\product.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "027df5ab-f47a-4871-a688-53474f996b04",
          "title": "API Product tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f672a514-7265-4db8-849c-ccccc5d3edb6",
              "title": "Get list and search for a product",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Search for an unknown product",
                  "fullTitle": "API Product tests Get list and search for a product Search for an unknown product",
                  "timedOut": null,
                  "duration": 633,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.searchProduct('0000').then(product => {\n  expect(product.status).to.equal(400);\n  expect(product.body.message).to.equal('Produto não encontrado');\n});",
                  "err": {},
                  "uuid": "9d0b27db-2afb-4e65-b46b-9303c1812e2c",
                  "parentUUID": "f672a514-7265-4db8-849c-ccccc5d3edb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get products list and search for the first",
                  "fullTitle": "API Product tests Get list and search for a product Get products list and search for the first",
                  "timedOut": null,
                  "duration": 492,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getProductsList().then(list => {\n  expect(list.status).to.equal(200);\n  expect(list.body).be.not.empty;\n  cy.searchProduct(list.body.produtos[0]._id).then(product => {\n    expect(product.status).to.equal(200);\n    expect(product.body.nome).to.equal(list.body.produtos[0].nome);\n    expect(product.body.descricao).to.equal(list.body.produtos[0].descricao);\n    expect(product.body.preco).to.equal(list.body.produtos[0].preco);\n    expect(product.body.quantidade).to.equal(list.body.produtos[0].quantidade);\n  });\n});",
                  "err": {},
                  "uuid": "750cd80f-4cc4-4265-92b5-94f314cdbafe",
                  "parentUUID": "f672a514-7265-4db8-849c-ccccc5d3edb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d0b27db-2afb-4e65-b46b-9303c1812e2c",
                "750cd80f-4cc4-4265-92b5-94f314cdbafe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1125,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "65305de1-72cb-4987-abdb-07edc82f05b1",
              "title": "Create a product",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create without access token",
                  "fullTitle": "API Product tests Create a product Create without access token",
                  "timedOut": null,
                  "duration": 249,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createProductApi(product).then(response => {\n  expect(response.status).to.equal(401);\n  expect(response.body.message).to.equal('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
                  "err": {},
                  "uuid": "4c4758a7-a2e0-432e-871d-b3eec9931a79",
                  "parentUUID": "65305de1-72cb-4987-abdb-07edc82f05b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "With correct token, insert a same product 2 times (expect response code 201 and 400, respectively)",
                  "fullTitle": "API Product tests Create a product With correct token, insert a same product 2 times (expect response code 201 and 400, respectively)",
                  "timedOut": null,
                  "duration": 857,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.createProductApi(product, body.authorization).then(firstResponse => {\n    expect(firstResponse.status).to.equal(201);\n    expect(firstResponse.body.message).to.equal('Cadastro realizado com sucesso');\n    cy.createProductApi(product, body.authorization).then(secondResponse => {\n      expect(secondResponse.status).to.equal(400);\n      expect(secondResponse.body.message).to.equal('Já existe produto com esse nome');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "7189ee77-6abb-4736-bf4b-5a33ba0c2736",
                  "parentUUID": "65305de1-72cb-4987-abdb-07edc82f05b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create a product with non-admin user",
                  "fullTitle": "API Product tests Create a product Create a product with non-admin user",
                  "timedOut": null,
                  "duration": 668,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('user'));\ncy.loginApi(Cypress.env('user')).then(({\n  body\n}) => {\n  cy.createProductApi(product, body.authorization).then(response => {\n    expect(response.status).to.equal(403);\n    expect(response.body.message).to.equal('Rota exclusiva para administradores');\n  });\n});",
                  "err": {},
                  "uuid": "7051cfbe-fd01-4c38-ba61-192952308031",
                  "parentUUID": "65305de1-72cb-4987-abdb-07edc82f05b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c4758a7-a2e0-432e-871d-b3eec9931a79",
                "7189ee77-6abb-4736-bf4b-5a33ba0c2736",
                "7051cfbe-fd01-4c38-ba61-192952308031"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1774,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3b30256e-b151-405d-8174-83a7109c395e",
              "title": "Delete a product",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete without valid token",
                  "fullTitle": "API Product tests Delete a product Delete without valid token",
                  "timedOut": null,
                  "duration": 272,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.deleteProductApi('0000').then(response => {\n  expect(response.status).to.equal(401);\n  expect(response.body.message).to.equal('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
                  "err": {},
                  "uuid": "219ac0e7-339f-4fb8-85ec-4be12e4db5a3",
                  "parentUUID": "3b30256e-b151-405d-8174-83a7109c395e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete a product with non-admin user",
                  "fullTitle": "API Product tests Delete a product Delete a product with non-admin user",
                  "timedOut": null,
                  "duration": 849,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('user'));\ncy.loginApi(Cypress.env('user')).then(({\n  body\n}) => {\n  cy.getProductsList().then(list => {\n    cy.deleteProductApi(list.body.produtos[0]._id, body.authorization).then(response => {\n      expect(response.status).to.equal(403);\n      expect(response.body.message).to.equal('Rota exclusiva para administradores');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "25b40734-1fbe-4374-bca4-df05b63a3979",
                  "parentUUID": "3b30256e-b151-405d-8174-83a7109c395e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete a product with an admin user and valid product ID",
                  "fullTitle": "API Product tests Delete a product Delete a product with an admin user and valid product ID",
                  "timedOut": null,
                  "duration": 839,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const productToExclude = {\n  nome: faker.commerce.productName(),\n  preco: faker.commerce.price(),\n  descricao: faker.lorem.paragraph(),\n  quantidade: faker.random.number()\n};\ncy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.createProductApi(productToExclude, body.authorization).then(product => {\n    cy.deleteProductApi(product.body._id, body.authorization).then(response => {\n      expect(response.status).to.equal(200);\n      expect(response.body.message).to.equal('Registro excluído com sucesso');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "7238d6fe-f483-42d2-8c71-acaf0ec8fbe6",
                  "parentUUID": "3b30256e-b151-405d-8174-83a7109c395e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete a product with an admin user and invalid product ID",
                  "fullTitle": "API Product tests Delete a product Delete a product with an admin user and invalid product ID",
                  "timedOut": null,
                  "duration": 628,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.deleteProductApi('0000', body.authorization).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Nenhum registro excluído');\n  });\n});",
                  "err": {},
                  "uuid": "6025166a-b247-4b85-8005-32187feabfeb",
                  "parentUUID": "3b30256e-b151-405d-8174-83a7109c395e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete a product which is part of some shopping cart",
                  "fullTitle": "API Product tests Delete a product Delete a product which is part of some shopping cart",
                  "timedOut": null,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// TODO - Implement this test",
                  "err": {},
                  "uuid": "72045ac1-d41c-4acb-9b53-f941ceb91db8",
                  "parentUUID": "3b30256e-b151-405d-8174-83a7109c395e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "219ac0e7-339f-4fb8-85ec-4be12e4db5a3",
                "25b40734-1fbe-4374-bca4-df05b63a3979",
                "7238d6fe-f483-42d2-8c71-acaf0ec8fbe6",
                "6025166a-b247-4b85-8005-32187feabfeb",
                "72045ac1-d41c-4acb-9b53-f941ceb91db8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2625,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e593dd74-dad6-4cf0-bea8-ad056afdd8b1",
              "title": "Update a product",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Update a product with non-admin user",
                  "fullTitle": "API Product tests Update a product Update a product with non-admin user",
                  "timedOut": null,
                  "duration": 857,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('user'));\ncy.loginApi(Cypress.env('user')).then(({\n  body\n}) => {\n  cy.getProductsList().then(list => {\n    cy.updateProductApi(list.body.produtos[0]._id, updatedProduct, body.authorization).then(response => {\n      expect(response.status).to.equal(403);\n      expect(response.body.message).to.equal('Rota exclusiva para administradores');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "44a3cef4-76a6-4ac5-a293-44043e22719a",
                  "parentUUID": "e593dd74-dad6-4cf0-bea8-ad056afdd8b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update a product with an admin user and valid product ID",
                  "fullTitle": "API Product tests Update a product Update a product with an admin user and valid product ID",
                  "timedOut": null,
                  "duration": 847,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.getProductsList().then(list => {\n    cy.updateProductApi(list.body.produtos[0]._id, updatedProduct, body.authorization).then(response => {\n      expect(response.status).to.equal(200);\n      expect(response.body.message).to.equal('Registro alterado com sucesso');\n    });\n  });\n});\n/* NOTE - The API determines that if the product was not found by\n *         given ID, it will be created.\n */",
                  "err": {},
                  "uuid": "0bfd0eb0-c13c-4ccc-a00e-9cfc32930c17",
                  "parentUUID": "e593dd74-dad6-4cf0-bea8-ad056afdd8b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update a product with an admin user and invalid product ID (expect to insert)",
                  "fullTitle": "API Product tests Update a product Update a product with an admin user and invalid product ID (expect to insert)",
                  "timedOut": null,
                  "duration": 650,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const unknownProduct = {\n  nome: faker.commerce.productName(),\n  descricao: faker.lorem.paragraph(),\n  preco: faker.commerce.price(),\n  quantidade: faker.random.number()\n};\ncy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.updateProductApi('0000', unknownProduct, body.authorization).then(response => {\n    expect(response.status).to.equal(201);\n    expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  });\n});",
                  "err": {},
                  "uuid": "cd16d181-d166-43bb-b24c-d41cafa92469",
                  "parentUUID": "e593dd74-dad6-4cf0-bea8-ad056afdd8b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update a product with an admin user and wrong ID and tries to insert duplicated name",
                  "fullTitle": "API Product tests Update a product Update a product with an admin user and wrong ID and tries to insert duplicated name",
                  "timedOut": null,
                  "duration": 632,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createUserApi(Cypress.env('admin'));\ncy.loginApi(Cypress.env('admin')).then(({\n  body\n}) => {\n  cy.updateProductApi('0000', updatedProduct, body.authorization).then(response => {\n    expect(response.status).to.equal(400);\n    expect(response.body.message).to.equal('Já existe produto com esse nome');\n  });\n});",
                  "err": {},
                  "uuid": "d99a1362-1bde-4931-9bfa-c715dd03c9bf",
                  "parentUUID": "e593dd74-dad6-4cf0-bea8-ad056afdd8b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44a3cef4-76a6-4ac5-a293-44043e22719a",
                "0bfd0eb0-c13c-4ccc-a00e-9cfc32930c17",
                "cd16d181-d166-43bb-b24c-d41cafa92469",
                "d99a1362-1bde-4931-9bfa-c715dd03c9bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2986,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}